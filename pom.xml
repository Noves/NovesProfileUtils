<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.noves</groupId>
    <artifactId>profile-util</artifactId>
    <version>0.0.1</version>

    <name>Profile Util</name>
    <description>This project contains different utility functions for processing FHIR profiles.</description>

    <licenses>
        <license>
            <name>Apache Software License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <properties>
        <!-- Specific properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <!-- Dependencies versions -->
        <java.version>17</java.version>
        <junit.jupiter.version>5.8.2</junit.jupiter.version>
        <dependency.check.maven.version>7.1.0</dependency.check.maven.version>
        <maven.surefire.report.version>3.0.0-M6</maven.surefire.report.version>
        <maven.surefire.report.plugin.version>3.0.0-M6</maven.surefire.report.plugin.version>
        <hapi.fhir.version>6.1.0</hapi.fhir.version>
    </properties>

    <dependencies>
        <!-- Dependencies with default scope (=compile) that will be part of the Jar -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.11</version>
        </dependency>

        <!-- Dependencies for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.6.3</version>
        </dependency>
        <!-- Java implementation of the FHIR spec -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-structures-r4</artifactId>
            <version>${hapi.fhir.version}</version>
        </dependency>
    </dependencies>

    <build>

        <plugins>

            <!-- Use to check and generate the NOTICE file ("mvn notice:check", "mvn notice:generate") -->
            <plugin>
                <groupId>org.jasig.maven</groupId>
                <artifactId>maven-notice-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <noticeTemplate>NOTICE.template</noticeTemplate>
                    <licenseMapping>
                        <param>src/main/resources/license-mappings.xml</param>
                    </licenseMapping>
                    <outputDir>src/main/resources</outputDir>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.glassfish.jaxb</groupId>
                        <artifactId>jaxb-runtime</artifactId>
                        <version>2.3.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- This is to run the unit tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <!-- This is to run the integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Create a simple jar that can be used as an API -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                        </manifest>
                    </archive>
                    <excludes>
                        <exclude>logback.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Create an uber jar with all dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/**</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>exec</shadedClassifierName>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>io.noves.profiles.util.AppCli</Main-Class>
                                        <Built-By>Noves GmbH</Built-By>
                                    </manifestEntries>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>NOTICE</resource>
                                    <file>NOTICE</file>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>LICENSE</resource>
                                    <file>LICENSE</file>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Add licenses in headers of files with `mvn license:format`. Remove
                    with `mvn license:remove`. Further info: https://github.com/mycila/license-maven-plugin -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <header>other/license-header.txt</header>
                        <properties>
                            <license.owner>Noves GmbH</license.owner>
                            <license.years>2022</license.years>
                            <license.projectName>profile-util</license.projectName>
                        </properties>
                        <includes>
                            <include>src/main/java/**/*.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>first</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <profiles>

        <!-- Tests the dependencies for CVE (Common Vulnerabilities and Exposures). This takes some time, so it is not
             included in the normal execution cycle. Execute with: "mvn -P dependency-check" -->
        <profile>
            <id>dependency-check</id>
            <build>
                <defaultGoal>dependency-check:check</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency.check.maven.version}</version>
                        <configuration>
                            <formats>
                                <format>HTML</format>
                                <format>JUNIT</format>
                            </formats>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>